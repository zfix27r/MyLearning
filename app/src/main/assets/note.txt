Сделать словарик для подсветки терминов:
фреймворк, изолированность, слабая связанность, абстракция, Entities, Use Cases,
Interface Adapters, Frameworks and Drivers, MVC, SQL

Неизменяемый объект
Immutable objects
Объект, состояние которого не может быть изменено после создания.
https://ru.wikipedia.org/wiki/Неизменяемый_объект



Шаблоны проектирования
Fundamental

https://ru.wikipedia.org/wiki/Шаблон_проектирования

  {
    "title": "Шаблон делегирования",
    "name": "Delegation pattern",
    "description": "Объект внешне выражает некоторое поведение, но в реальности передаёт ответственность за выполнение этого поведения связанному объекту.",
    "source": "https://ru.wikipedia.org/wiki/Шаблон_делегирования"
  },

  {
    "title": "Шаблон функционального дизайна",
    "name": "Functional design",
    "description": "Гарантирует, что каждый модуль компьютерной программы имеет только одну обязанность и исполняет её с минимумом побочных эффектов на другие части программы.",
    "source": "https://ru.wikipedia.org/wiki/Шаблон_функционального_дизайна"
  },

  {
    "title": "Неизменяемый интерфейс",
    "name": "Immutable interface",
    "description": "Создание неизменяемого объекта.",
    "source": "https://ru.wikipedia.org/wiki/Неизменяемый_интерфейс"
  },

  {
    "title": "Интерфейс",
    "name": "Interface",
    "description": "Общий метод для структурирования компьютерных программ для того, чтобы их было проще понять.",
    "source": "https://ru.wikipedia.org/wiki/Интерфейс_(шаблон_проектирования)"
  },

  {
    "title": "Интерфейс-маркер",
    "name": "Marker interface",
    "description": "В качестве атрибута (как пометки объектной сущности) применяется наличие или отсутствие реализации интерфейса-маркера. В современных языках программирования вместо этого могут применяться атрибуты или аннотации.",
    "source": "https://ru.wikipedia.org/wiki/Интерфейс-маркер_(шаблон_проектирования)"
  },

  {
    "title": "Контейнер свойств",
    "name": "Property container",
    "description": "Позволяет добавлять дополнительные свойства для класса в контейнер (внутри класса), вместо расширения класса новыми свойствами.",
    "source": "https://ru.wikipedia.org/wiki/Контейнер_свойств_(шаблон_проектирования)"
  },

  {
    "title": "Канал событий",
    "name": "Event channel",
    "description": "Расширяет шаблон Publish/Subscribe, создавая централизованный канал для событий. Использует объект-представитель для подписки и объект-представитель для публикации события в канале. Представитель существует отдельно от реального издателя или подписчика. Подписчик может получать опубликованные события от более чем одного объекта, даже если он зарегистрирован только на одном канале.",
    "source": "https://ru.wikipedia.org/wiki/Канал_событий_(шаблон_проектирования)"
  },







