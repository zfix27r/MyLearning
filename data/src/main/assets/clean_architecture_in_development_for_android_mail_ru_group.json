[
  {
    "title": "Чистая архитектура",
    "content": [
      {
        "title": "сценарии использования впереди;"
     },
      {
        "title": "позволяет отложить выбор деталей;"
      },
      {
        "title": "легко тестировать;"
      },
      {
        "title": "универсальный подход."
      }
    ]
  },
  {
    "title": "Требования",
    "content": [
      {
        "title": "независимость от фреймворка;",
        "description": "Проект не должен быть тесно интегрирован в фреймворк на котором он написан. Возможность изменить основной фреймворк на другой. Перенести с Android на iOS."
      },
      {
        "title": "тестируемость;",
        "description": "Код должен легко тестироваться автоматическими средствами. Достигается хорошей изолированностью и слабой связанностью."
      },
      {
        "title": "независимость от UI;",
        "description": "Переход от веб интерфейса на консольный, смена дизайна с минимальными изменениями."
      },
      {
        "title": "независимость от базы данных;",
        "description": "Легкое изменние одной базы данных на другую"
      },
      {
        "title": "независимость от любых внешних факторов.",
        "description": "Логика приложения ничего не знает об остальном внешнем мире, технологиях, протоколах. Все это можно легко изменить."
      }
    ],
    "image": "img_clean_architecture_in_development_for_android_mail_ru_group_main_scheme"
  },
  {
    "title": "Правило зависимостей",
    "description": "Внешние слои зависят только от внутренних слоев, а внутренние не зависят от внешних.",
    "content": [
      {
        "title": "Уровень абстракции;",
        "description": "Растет к внутренним областям."
      },
      {
        "title": "Зависимость кода;",
        "description": "Растет к внутренним областям."
      },
      {
        "title": "Формат данных.",
        "description": "Внешние слои не знают о базе данных. Сущности могут использоваться во всех внешних слоях."
      }
    ],
    "image": "img_clean_architecture_in_development_for_android_mail_ru_group_dependency_rule"
  },
  {
    "title": "Entities",
    "description": "В андройд чаще всего содержит структуры данных. Может использоваться без изменений на веб-сервере, клиенте. Не содержит упоминаний о способах доставки или хранении.",
    "content": [
      {
        "title": "бизнес логика;"
      },
      {
        "title": "данные и методы;"
      },
      {
        "title": "самый высокий уровень;"
      },
      {
        "title": "могут использоваться другими приложениями."
      }
    ]
  },
  {
    "title": "Use Cases",
    "description": "Бизнес логика конкретного приложения. Действия пользователя: показ каталога, изменение способа сортировки и т.д.",
    "content": [
      {
        "title": "сценарии использования;"
      },
      {
        "title": "логика этого приложения;"
      },
      {
        "title": "не влияют на Entities;"
      },
      {
        "title": "не зависят от UI, БД и т.д."
      }
    ]
  },
  {
    "title": "Interface Adapters",
    "description": "Классическая чистая архтитектура, в андроид реализация другая.",
    "content": [
      {
        "title": "адаптеры данных;"
      },
      {
        "title": "весь MVC здесь;"
      },
      {
        "title": "SQL тоже здесь."
      }
    ]
  },
  {
    "title": "Frameworks and Drivers",
    "description": "Конкретные реализации, содержит необходимые связующие вызовы. В идеале не содержит if'ов.",
    "content": [
      {
        "title": "фреймворки, инструменты;"
      },
      {
        "title": "БД, Web-фреймворки и т.д.;"
      },
      {
        "title": "детали реализации;"
      },
      {
        "title": "мало нашего кода."
      }
    ]
  }
]